@model BibliotecaOnline.Models.LivroExemplar
@{
    ViewBag.Title = "Exemplares ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/adminlte/components/jquery/dist/jquery.min.js"></script>
<link href="~/Scripts/adminlte/components/select2/dist/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/adminlte/components/select2/dist/js/select2.min.js"></script>
<script src="~/Scripts/adminlte/components/select2/dist/js/i18n/pt-BR.js"></script>
<style>
    .div_ {
        overflow: auto !important;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 22px !important;
    }
</style>

<script>

    $(document).ready(function () {
        $('.select2').select2({
            width: '100%',
            placeholder: "Selecione",
            allowClear: true
        });

        @*$.ajax ({
            url: '@Url.Action("AutoCompletecampus", "Exemplares",new {campus = Model.campus })',
            dataType: 'json',
            type: 'POST',
            delay: 250,
            processResults: function (data, search) {
                return {
                    results: $.map(data, function (item) {
                        return {
                            id: item.Id,
                            text: item.Nome,
                        }
                    }),
                };
            }
        });*@



        $.ajax({
            type: 'POST',
            url: '@Url.Action("AutoCompletecampus", "Exemplares",new {campus = Model.campus })',
        }).then(function (data) {
            var option;
            results: $.map(data, function (item) {
                option = new Option(item.Nome, item.Id, true, true);
            });

            $("#campus").append(option).trigger('change');

            $("#campus").trigger({
                type: 'select2:select',
                params: {
                    data: data
                }
            });
        });

        $("#campus").select2({
        ajax: {
           url: '@Url.Action("AutoCompletecampus", "Exemplares")',
            dataType: 'json',
            type: 'POST',
            delay: 250,
            data: function (params) {
                return {
                    campus: params.term,
                };
            },
            processResults: function (data, search) {
                return {
                    results: $.map(data, function (item) {
                      return {
                        id: item.Id ,
                        text: item.Nome,
                      }
                   }),
               };
            },
            cache: true
        },
        templateResult: function (item) {
          if (item.loading) return item.text;
          return item.text;
        },
        escapeMarkup: function (markup) { return markup; },
        minimumInputLength: 3
        });




    });
</script>

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            <br />
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i>Exemplares</a></li>
            <li><a href="#">Alterar Cadastro</a></li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <!-- left column -->
            <div class="">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Cadastro de Exemplares</h3>
                    </div>
                    <!-- /.box-header -->
                    @using (Html.BeginForm("Edit", "Exemplares", FormMethod.Post, new { @id = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="box-body">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" }) @Html.HiddenFor(model => model.Id)@Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.LivroId)
                            <div class="form-group">
                                @Html.LabelFor(model => model.CodigoDeBarras, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.CodigoDeBarras, new { htmlAttributes = new { @class = "form-control", @placeholder = "CodigoDeBarras", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.CodigoDeBarras, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group" disabled="true">
                                @Html.LabelFor(model => model.LivroId, "Livro", htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.Livros.Titulo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Livro", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.Livros.Titulo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.campus, htmlAttributes: new { @class = "" })
                                <select id="campus" name="campus" class="form-control select2"></select>
                                @Html.ValidationMessageFor(model => model.campus, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Estante, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.Estante, new { htmlAttributes = new { @class = "form-control", @placeholder = "Estante", @required = true } })
                                @Html.ValidationMessageFor(model => model.Estante, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Setor, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.Setor, new { htmlAttributes = new { @class = "form-control", @placeholder = "Setor", @required = true } })
                                @Html.ValidationMessageFor(model => model.Setor, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="box-footer">
                            <button type="submit" class="btn btn-primary pull-right">Alterar</button>
                            <a href="@Url.Action("Index", "Exemplares")" class="btn btn-default">Voltar</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</div>