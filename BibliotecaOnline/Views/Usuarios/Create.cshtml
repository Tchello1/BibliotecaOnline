@model BibliotecaOnline.Models.Pessoa
@{
    ViewBag.Title = "Usuários ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/adminlte/components/jquery/dist/jquery.min.js"></script>
<link href="~/Scripts/adminlte/components/select2/dist/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/adminlte/components/select2/dist/js/select2.min.js"></script>
<script src="~/Scripts/adminlte/components/select2/dist/js/i18n/pt-BR.js"></script>

<style>
    .div_ {
        overflow: auto !important;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 22px !important;
    }
</style>
<script>
    $(document).ready(function () {
        $('.select2').select2({
            width: '100%',
            placeholder: "Selecione",
            allowClear: true
        });

        $("#UF").change(function () {
            listaCidade($(this).val());
        });

        $("#cadastrar").click(function () {
            VerificaUsuario($("#Matricula").val());
        });

        function VerificaUsuario(matricula) {
             $.ajax({
                        url: '@Url.Action("VerificaUsuario", "Usuarios")',
                        dataType: 'json',
                        type: "POST",
                        cache: false,
                 data: { matricula: matricula },
                        success: function (data) {
                            if (data.mensagem == "ok") {
                                var delay = 1000;
                                setTimeout(function () { window.location = '/Usuarios/Index/'; }, delay);
                            }
                            else {
                                alert(data.mensagem);
                            }
                        }
                    });
        }
    });
    //chamada ajax para a Action ListaCidade
    //passando como parâmetro a Estado selecionado
    function listaCidade(uf) {
        $.getJSON("ListaCidade/", { uf: uf }, listaCidadeCallBack);
    }
    //função que irá ser chamada quando terminar
    //a chamada ajax
    function listaCidadeCallBack(json) {
        //Limpar os itens que são maiores que 0
        //Ou seja: não retirar o primeiro item
        $("#Cidade :gt(0)").remove();
        $(json).each(function () {
            //adicionando as opções de acordo com o retorno
            $("#Cidade").append("<option value='" + this.Value + "'>" + this.Text + "</option>");
        });
    }
</script>
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            <br />
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i>Usuários</a></li>
            <li><a href="#">Novo Cadastro</a></li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <!-- left column -->
            <div class="">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Cadastro de Usuários</h3>
                    </div>
                    <!-- /.box-header -->
                    @using (Html.BeginForm("Create", "Usuarios", FormMethod.Post, new { @id = "form" }))
                    {
       
                        <div class="box-body">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome", @required = true } })
                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "" })
                                @Html.EnumDropDownListFor(model => model.Tipo, "", new { @class = "form-control select2", @placeholder = "Tipo", @required = true })
                                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Matricula, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.Matricula, new { htmlAttributes = new { @class = "form-control", @placeholder = "Matrícula", @required = true } })
                                @Html.ValidationMessageFor(model => model.Matricula, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "" })
                                @Html.DropDownList("UF", (IEnumerable<SelectListItem>)ViewBag.Estado, String.Empty, new { @class = "form-control select2", @placeholder = "UF" })
                                @Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger", @required = true })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "" })
                                <select id="Cidade" name="Cidade" class="form-control select2"></select>
                                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger", @required = true })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger", @required = true })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", @placeholder = "Senha", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger", @required = true })
                            </div>
                        </div>
                        <div class="box-footer">
                            <button id="cadastrar" type="button" class="btn btn-primary pull-right">Cadastrar</button>
                            <a href="@Url.Action("Index", "Usuarios")" class="btn btn-default">Voltar</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</div>